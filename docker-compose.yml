services:

  web:
    image: "backend:latest"
    stop_signal: SIGINT
    ports:
      - "8000:8000"
    build:
      context: .
    working_dir: "/app"
    volumes:
      - .:/app
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
    restart: always
    env_file:
      - ".env"
    depends_on:
      - pg_database

  pg_database:
    image: postgres:16
    ports:
      - "5439:5432"
    restart: always
    volumes:
      - pg_data:/var/lib/postgresql/data
    command: "postgres -c max_connections=150
            -c shared_buffers=512MB -c effective_cache_size=1536MB
            -c maintenance_work_mem=128MB -c checkpoint_completion_target=0.9 -c wal_buffers=16MB
            -c default_statistics_target=100 -c random_page_cost=1.1 -c effective_io_concurrency=200
            -c work_mem=3495kB -c min_wal_size=1GB -c max_wal_size=4GB -c max_worker_processes=2
            -c max_parallel_workers_per_gather=1 -c max_parallel_workers=2 -c max_parallel_maintenance_workers=1"
    env_file:
      - '.env'

  pg_database_test:
    image: postgres:16
    ports:
      - "5433:5432"
    restart: always
    tmpfs:
          - /var/lib/postgresql/data  # БД в памяти для скорости
    command: "postgres -c max_connections=150
            -c shared_buffers=512MB -c effective_cache_size=1536MB
            -c maintenance_work_mem=128MB -c checkpoint_completion_target=0.9 -c wal_buffers=16MB
            -c default_statistics_target=100 -c random_page_cost=1.1 -c effective_io_concurrency=200
            -c work_mem=3495kB -c min_wal_size=1GB -c max_wal_size=4GB -c max_worker_processes=2
            -c max_parallel_workers_per_gather=1 -c max_parallel_workers=2 -c max_parallel_maintenance_workers=1"
    env_file:
      - '.env.test'


volumes:
  redis_data:
  pg_data:
